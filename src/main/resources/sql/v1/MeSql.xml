<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hongzhi.zswh.app.me.dao.MeDao">

 <select id="selectByPhoneAndPlatform" resultType="com.hongzhi.zswh.app.me.entity.UserInfo" >
        select 
           user_id 
          ,platform_id 
          ,user_real_name  
          ,user_login_name 
          ,user_password   
          ,phone   
          ,mail_address    
          ,user_status  
          ,remark  
          ,create_time 
          ,create_date 
          ,is_delete   
        from user_info    
        <where>
            <if test="phone !=null ">
                and phone=#{phone}
            </if>
            <if test="platform_id != null ">
                and platform_id = #{platform_id}
            </if>
        </where>
    </select>
    
    <insert id="insertUserInfo"   useGeneratedKeys="true" keyProperty="user_id">
        insert into user_info (
            platform_id
           ,user_real_name
           ,user_login_name
           ,user_password
           ,phone
           ,mail_address
           ,user_status
           ,remark
           ,create_time
           ,create_date
           ,is_delete
        ) values (
            #{platform_id }
           ,#{user_real_name }
           ,#{user_login_name }
           ,#{user_password }
           ,#{phone }
           ,#{mail_address }
           ,#{user_status }
           ,#{remark }
           ,DATE_FORMAT(CURTIME(),'%H%i%s')
           ,DATE_FORMAT(CURDATE(),'%Y%m%d')
           ,#{is_delete }
        )
    </insert>
  
    <select id="loadMe"  resultType="map"> 
    	SELECT
			a.nickname AS user_name,
			ifnull(dic. CODE, '0') AS join_club_status,
			ifnull(t1.competition_count, '0') AS user_competition_number,
			ifnull(t2.sprots_count, '0') AS user_sports_camp_number
		FROM
			(
				SELECT
					COALESCE(nickname, '未设置昵称') AS nickname,
					user_id
				FROM
					user_info
				WHERE
					user_id =  #{user_id}
			) a
		LEFT JOIN (
			SELECT
				a.user_id,
				a.user_real_name,
				COALESCE (b.join_club_status, '0') AS join_club_status,
				count(c.user_competition_status) AS competition_count
			FROM
				user_info a
			LEFT JOIN 
				user_detail b 
					ON 
					a.user_id = b.user_id
			LEFT JOIN 
				user_competition c 
					ON 
						a.user_id = c.user_id
			<![CDATA[   and c.user_competition_status<>'0' ]]>
			LEFT JOIN 
				competition d 
					ON 
						c.competition_id = d.competition_id
			WHERE
					a.is_delete = '0'
				and a.user_id= #{user_id}
				and a.platform_id= #{platform_id}
				AND d.is_delete = '0'
			GROUP BY
				a.user_id,
				a.user_real_name,
				b.join_club_status,
				a.nickname
		) t1 
			ON 
				a.user_id = t1.user_id
		LEFT JOIN (
			SELECT
				user_id,
				count(sports_camp_id) AS sprots_count
			FROM
				user_sports_camp
			GROUP BY
				user_id
		) t2 
			ON 
				t1.user_id = t2.user_id
		LEFT JOIN dictionary dic 
			ON 
				t1.join_club_status = dic.CODE
				AND p_code = 'user_detail'
				and dic.language= #{language}
    </select>
    <select id="loadMeCompetitons" resultType="map">
     select ifnull(a.competition_id ,0) as competition_id ,
       ifnull(a.user_id ,0) as user_id ,
       ifnull(a.language_id ,0) as language_id ,
       ifnull(a.platform_id ,0) as platform_id ,
       ifnull(a.competition_name ,'') as competition_name ,
       case
           when a.competition_level ='2' then '俱乐部赛事'
           when a.competition_level='1' then '全国赛事'
       else ''
       end as competition_level ,
       ifnull(a.competition_description ,'') as competition_description ,
       case
           when a.competition_status='1' then '启用'
           when a.competition_status='0' then '禁用'
       else ''
       end as competition_status ,
       ifnull(a.competition_publicity_pictures ,'') as competition_publicity_pictures ,
       ifnull(a.registration_start_date ,'') as registration_start_date ,
       ifnull(a.registration_end_date ,'') as registration_end_date ,
       ifnull(a.competition_start_date ,'') as competition_start_date ,
       ifnull(a.competition_end_date ,'') as competition_end_date ,
       ifnull(a.id ,0) as id ,
       ifnull(a.compertition_live_status,'') as compertition_status_final,
       ifnull(b.user_real_name ,'') as user_real_name ,
       ifnull(c.language_name ,'') as language_name ,
       ifnull(d.platform_name ,'') as platform_name ,
       coalesce(e.name,' ') as name 
       , coalesce(x.user_competition_status,'0')  as   registration_status   
	    FROM
		user_competition x
		LEFT JOIN competition a ON x.competition_id = a.competition_id
		left join user_info b on x.user_id = b.user_id
		   left join language c on a.language_id = c.language_id
		   left join platform d on a.platform_id = d.platform_id
		   left join world_city e on a.id=e.id
		 WHERE
		x.user_competition_status in ('1','99')
		and 	a.is_delete = '0'
			AND x.user_id =#{other,jdbcType=INTEGER} 
		order by 
			case when  CURDATE() > cast(a.competition_start_date as date)   
			      then  abs(to_days(CURDATE())-to_days(cast(a.competition_start_date as date)) )+365
			      else abs(to_days(CURDATE())-to_days(cast(a.competition_start_date as date)) )  
			      end 
			,case when  CURDATE() > cast(a.registration_start_date as date) 
			      then  abs(to_days(CURDATE())-to_days(cast(a.registration_start_date as date)) )+365
			      else  abs(to_days(CURDATE())-to_days(cast(a.registration_start_date as date)) ) 
			      end   
           limit 
            #{pageStartRow } , #{pageRecorders }
    </select>
    
    <select id="loadMeSportsCamps" resultType="map">
	    select
		     sc.sports_camp_id,
		     sc.language_id,
		     sc.user_id,
		     sc.sports_camp_name,
		     sc.remark
        from
             sports_camp sc
        left join  
        	user_sports_camp usc 
            	on  
               		sc.sports_camp_id = usc.sports_camp_id 
        left join 
        	user_detail ud
              	on   
              		usc.user_id = ud.user_id  
        left join 
        	club_sports_camp csc
             on   
             	ud.club_id = csc.club_id and
             	usc.sports_camp_id=csc.sports_camp_id 
        where  ud.join_club_status='99'
            and  usc.user_id = #{other }
        limit 
        	#{pageStartRow } , #{pageRecorders }
    </select>
    
    
    
    <update id="updatePassword">
        update  user_info

           set  user_password=#{newPasswordTwo}
               ,salt = #{salt} 
               
         where  phone=#{phone}
           and  user_id=#{user_id}
    </update>
    <select id="getPassword" resultType="map">
        select user_password as password
               ,salt  
        from user_info
        where phone=#{phone}
         and user_id=#{user_id}
    </select>
    
</mapper>