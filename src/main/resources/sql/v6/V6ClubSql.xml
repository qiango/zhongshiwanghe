<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hongzhi.zswh.app_v6.dao.V6ClubDao">


    <update id="saveClubPic">
        update club a
        set
          a.club_pic = #{picUrl}
        where a.club_id = #{club_id}
          and a.is_delete = 0
    </update>


    <!--List<Map<String,Objects>> selectCompetitionByUserId(Integer userId);-->
    <select id="selectCompetitionByUserId" resultType="map">
        SELECT
          b.competition_id
        FROM
          user_competition a
        LEFT JOIN
          competition b
        on a.competition_id =b.competition_id
        WHERE a.user_id = #{userId}
          and b.compertition_live_status !=5
          and a.user_competition_status IN ('1','99')
    </select>
    <!--UserDetailEntity selectUserDetailEntity(Integer userId);-->
    <select id="selectUserDetailEntity" resultType="com.hongzhi.zswh.app_v6.entity.UserDetailEntity">
        SELECT
          club_id,
          user_id,
          jump_club_number,
          join_club_status,
          user_level,
          create_time,
          change_status_time,
          club_refuse_id
        FROM user_detail  where user_id=#{userId};
    </select>
    <!--void insetIntoUserDetail();-->
    <insert id="insetIntoUserDetail" parameterType="com.hongzhi.zswh.app_v6.entity.UserDetailEntity">
        INSERT INTO user_detail_bak(
          `club_id`,`user_id`,
          `jump_club_number`,
          `join_club_status`,
          `user_level`,
          `create_time`,
          `change_status_time`,
          `club_refuse_id`,
          `create_time_bak`
        ) VALUE(
          #{club_id},
          #{user_id},
          #{jump_club_number},
          #{join_club_status},
          #{user_level},
          #{create_time},
          #{change_status_time},
          #{club_refuse_id},
          NOW()
        )
    </insert>
    <!--void deleteUserDetailByUserId(@Param("userId") Integer userId);-->
    <delete id="deleteUserDetailByUserId">
        DELETE FROM user_detail WHERE user_id =#{userId}
    </delete>
    <select id="selectClubAdmin" resultType="map">
       select user_level
       from user_detail
       where
          club_id = #{club_id}
          and
          user_id = #{user_id}
          and user_level=0

    </select>
   <select id="queryClubLevel" resultType="map">
      select
          coalesce(user_level,'99')   user_level
          ,join_club_status
       <if test="club_id == null">
         ,club_id
       </if>
       from user_detail
       where
       <if test="club_id != null">
           club_id = #{club_id}
           and
       </if>
          user_id = #{user_id}
   </select>

    <select id="selectClubMembers" resultType="Integer">
        select
          user_id
        from
          user_detail
        where
          club_id = #{club_id}
        and
          join_club_status ='99'
    </select>

    <update id="transferClubByUserId">
        update user_detail a
        set
          a.user_level = #{user_level}
        where a.club_id = #{club_id}
          and a.user_id = #{id}
    </update>

    <select id="listClubByPageCount" resultType="Integer" >
        select
         count(*) as data_count
        from club  a
        left join world_city b
          on a.id = b.id
        left join dictionary  c
          on a.language_id = c.code
          and c.p_code='language'
          and c.language= #{language}
        left join dictionary d
          on a.club_status = d.code
          and d.p_code = 'club'
          and d.language= #{language}
        where is_delete = '0'
        <if test=" other !=null ">
            and  a.club_name  like  CONCAT('%', #{other} ,'%')
        </if>
    </select>

    <select id="listClubByPage" resultType="map" >
        select
          a.club_id
          ,a.club_name
          ,d.value   as club_status
        from club  a
        left join world_city b
          on a.id = b.id
        left join dictionary  c
          on a.language_id = c.code
          and c.p_code='language'
          and c.language= #{language}
        left join dictionary d
          on a.club_status = d.code
          and d.p_code = 'club'
          and d.language= #{language}
        where is_delete = '0'
        <if test=" other !=null ">
            and  a.club_name  like  CONCAT('%', #{other} ,'%')
        </if>
        <if test=" pageStartRow !=null  and   pageRecorders != null ">
            limit  #{pageStartRow } , #{pageRecorders }
        </if>
    </select>

    <select id="ownClubMemberCount" resultType="map">
        select
        a.user_id
        ,a.club_id
        ,count(b.user_id)  as club_member
        ,a.user_level
        from user_detail  a
        left join user_detail  b
        on a.club_id = b.club_id
        and b.join_club_status = '1'
        where a.user_id = #{owner}
        group by
        a.user_id
        ,a.club_id
        ,a.user_level
    </select>

    <select id="ownClubMemberList" resultType="map">
        select
        b.user_id                      as  club_user_id
        ,c.profile_picture              as  club_user_image
        ,coalesce(nickname,concat(substr(c.phone,1,3),'****',substr(c.phone,8) ) )
        as  club_user_name
        ,coalesce(b.user_level,'99')    as  club_user_level
        ,coalesce(h.value,g.value)      as  club_role_name
        ,concat(substr(c.phone,1,3),'****',substr(c.phone,8) )
        as  club_member_phone
        ,case  when b.user_id = #{user_id}  then 9
        when f.follower_id  is null
        then  1
        else  0 end                as  is_focus
        from  user_detail  b

        left join user_info  c
        on b.user_id = c.user_id
        <!--
        left join users_roles d
               on c.user_id  = d.user_id
         -->
        left join follower   f
        on  f.user_id = b.user_id
        and  f.follower_id = #{user_id}

        left join dictionary  g
        on  g.p_code='user_level'
        and  g.language = 'zh'
        and  g.code ='other'
        left join dictionary  h
        on  h.code = b.user_level
        and  h.p_code='user_level'
        and  h.language = 'zh'

        where b.club_id = #{club_id}
        and b.join_club_status = '99'
        and b.user_id !=#{user_id}
        order by   club_user_level  ,  club_user_id
    </select>

    <select id="clubInfo" resultType="com.hongzhi.zswh.app_v6.entity.ClubQueryEntity">
        select
        t1.user_id
        ,t1.club_id
        ,t1.join_club_status
        ,t1.join_club_status_name
        ,t1.club_member
        ,coalesce(t2.sports_camp,0)   as sports_camp
        ,t3.ranking_postion  as my_club_rank
        from  (
        select
        a.user_id
        ,a.club_id
        ,a.join_club_status
        ,c.value as join_club_status_name
        ,count(*)  as club_member
        from user_detail  a
        left join user_detail  b
        on a.club_id = b.club_id
        and b.join_club_status  = '99'
        left join dictionary  c
        on a.join_club_status = c.code
        and c.p_code = 'user_detail'
        and c.language = #{language}
        where a.user_id = #{userId }
        group by  a.user_id
        ,a.club_id
        ,a.join_club_status
        ,c.value
        ) t1
        left join (
        select
        t22.user_id
        ,count(*)  as sports_camp
        from club_sports_camp   t21
        left join user_detail  t22
        on t21.club_id = t22.club_id
        left join sports_camp  t23
        on t21.sports_camp_id = t23.sports_camp_id
        where t22.user_id =  #{userId }
        and t23.is_delete= '0'
        group by t22.user_id
        )  t2
        on  t1.user_id = t2.user_id

        left join (
        select
        concat(@row_number:=@row_number+1,'' )  AS ranking_postion
        , a.club_id
        , a.club_people   as  club_people_number

        from (
        select
        a.club_id
        ,b.club_name
        ,count(*)  as  club_people
        from user_detail  a
        left join club  b
        on a.club_id = b.club_id
        where join_club_status = '99'
        group by
        a.club_id
        ,b.club_name
        ) a
        ,(SELECT @row_number:=0) t
        order by club_people desc , convert(club_name USING gbk) COLLATE gbk_chinese_ci

        )  t3
        on t1.club_id = t3.club_id

    </select>

    <select id="userClub"  resultType="map">
        select
        b.club_id
        ,b.user_id
        ,b.id
        ,b.language_id
        ,b.club_name
        ,b.club_name_short
        ,b.club_applicant_name
        ,b.create_time
        ,b.create_date
        ,b.club_status
        ,b.club_description
        ,b.club_create_date
        ,b.club_qq
        ,coalesce(concat('/pic.htmls?p=',b.club_pic ),'' ) as club_image
        ,b.club_level
        ,b.club_rank

        from user_detail a
        left join club b
        on a.club_id = b.club_id
        where b.is_delete = '0'
        and a.user_id = #{user_id }
    </select>

    <select id="clubRanking" resultType="map">
        select
        concat(@row_number:=@row_number+1,'' )  AS ranking_postion
        , a.club_id
        ,coalesce(concat('/pic.htmls?p=',a.club_image ),'' ) as club_image
        , a.club_name
        , a.club_people   as  club_people_number
        ,a.club_level
        ,a.club_rank
        , case when  a.club_id = #{userClubId }
        then  '1'
        else  '0'
        end   as  user_belond
        from (
        select
        a.club_id
        ,b.club_pic  as club_image
        ,b.club_name
        ,b.club_level
        ,b.club_rank
        ,count(*)  as  club_people
        from user_detail  a
        left join club  b
        on a.club_id = b.club_id
        where join_club_status = '99'
        group by
        a.club_id
        ,b.club_pic
        ,b.club_name
        ) a
        ,(SELECT @row_number:=0) t
        order by club_people desc   , convert(club_name USING gbk) COLLATE gbk_chinese_ci
        <if test="limitSql != null  and  limitSql != '' ">
            ${limitSql  }
        </if>
    </select>
    <insert id="saveSetClub" useGeneratedKeys="true" keyProperty="club_id">
         insert into club(
              id
             ,user_id
             ,club_name
             ,club_applicant_name
             ,create_time
             ,create_date
             ,club_status
             ,club_pic
             ,club_description
            )
            values(
             #{city_id,jdbcType=INTEGER}
            ,#{user_id,jdbcType=INTEGER}
            ,#{club_name,jdbcType=VARCHAR}
            ,#{club_applicant_name,jdbcType=VARCHAR}
            ,DATE_FORMAT(now(),'%H%i%s')
            ,DATE_FORMAT(now(),'%Y%m%d')
            ,#{club_status}
            ,#{club_pic}
            ,#{club_description}
            )
    </insert>
    <select id="selectUserInfoByUserId" resultType="String">
        select
          coalesce(case WHEN a.user_real_name='' THEN NULL ELSE a.user_real_name end ,a.user_login_name) as club_applicant_name
        from
        user_info a
        where
          user_id = #{user_id}
        and
          is_delete = 0
        and
          user_status = 1
    </select>
    <insert id="saveUserDetail">
        insert into user_detail(
          club_id
          ,user_id
          ,join_club_status
          ,user_level
          ,create_time
        )values(
            #{club_id}
            ,#{user_id}
            ,'99'
            ,'0'
            ,now()
        )
    </insert>
    <update id="updateClubStatus">
        update
          club
        <trim prefix="SET" suffixOverrides=",">
            <if test=" club_status != null"> club_status=#{club_status },</if>
        </trim>
        <if test="club_id !=null and club_id!=0 ">
            where club_id = #{club_id}
        </if>
    </update>
</mapper>