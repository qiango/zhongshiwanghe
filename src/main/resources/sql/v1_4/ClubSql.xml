<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hongzhi.zswh.app_1_4.dao.ClubDao">

    <select id="selectClubAdmin" resultType="map">
       select user_level
       from user_detail
       where
          club_id = #{club_id}
          and
          user_id = #{user_id}
          and user_level=0

    </select>

    <select id="userClub"  resultType="map">
        select
          b.club_id
          ,b.user_id
          ,b.id
          ,b.language_id
          ,b.club_name
          ,b.club_name_short
          ,b.club_applicant_name
          ,b.create_time
          ,b.create_date
          ,b.club_status
          ,b.club_description
          ,b.club_create_date
          ,b.club_qq
          ,coalesce(concat('/pic.htmls?p=',b.club_pic ),'' ) as club_image
          ,b.club_level
          ,b.club_rank
        from
          user_detail a
        left join
          club b
        on
          a.club_id = b.club_id
        where
          b.is_delete = '0'
        and
          a.user_id = #{user_id }
    </select>

    <select id="clubRanking" resultType="map">
        select
        concat(@row_number:=@row_number+1,'' )  AS ranking_postion
        , a.club_id
        ,coalesce(concat('/pic.htmls?p=',a.club_image ),'' ) as club_image
        , a.club_name
        , a.club_people   as  club_people_number
        ,a.club_level
        ,a.club_rank
        , case when  a.club_id = #{userClubId }
        then  '1'
        else  '0'
        end   as  user_belond
        from (
        select
        a.club_id
        ,b.club_pic  as club_image
        ,b.club_name
        ,b.club_level
        ,b.club_rank
        ,count(*)  as  club_people
        from user_detail  a
        left join club  b
        on a.club_id = b.club_id
        where join_club_status = '99'
        group by
        a.club_id
        ,b.club_pic
        ,b.club_name
        ) a
        ,(SELECT @row_number:=0) t
        order by club_people desc   , convert(club_name USING gbk) COLLATE gbk_chinese_ci
        <if test="limitSql != null  and  limitSql != '' ">
            ${limitSql  }
        </if>
    </select>

    <select id="clubInfo" resultType="com.hongzhi.zswh.app_1_4.entity.ClubQueryEntity">
        select
          t1.user_id
          ,t1.club_id
          ,t1.join_club_status
          ,t1.join_club_status_name
          ,t1.club_member
          ,coalesce(t2.sports_camp,0)   as sports_camp
          ,t3.ranking_postion  as my_club_rank
        from  (
        select
          a.user_id
          ,a.club_id
          ,a.join_club_status
          ,c.value as join_club_status_name
          ,count(*)  as club_member
        from
          user_detail  a
        left join
          user_detail  b
        on
          a.club_id = b.club_id
        and
          b.join_club_status  = '99'
        left join
          dictionary  c
        on
          a.join_club_status = c.code
        and
          c.p_code = 'user_detail'
        and
          c.language = #{language}
        where
          a.user_id = #{userId }
        group by
          a.user_id
          ,a.club_id
          ,a.join_club_status
          ,c.value
        ) t1
        left join (
        select
          t22.user_id
          ,count(*)  as sports_camp
        from
          club_sports_camp   t21
        left join
          user_detail  t22
        on t21.club_id = t22.club_id
        left join
          sports_camp  t23
        on
          t21.sports_camp_id = t23.sports_camp_id
        where
          t22.user_id =  #{userId }
        and
          t23.is_delete= '0'
        group by
          t22.user_id
        )  t2
        on  t1.user_id = t2.user_id

        left join (
        select
          concat(@row_number:=@row_number+1,'' )  AS ranking_postion
          ,a.club_id
          ,a.club_people   as  club_people_number
        from (
        select
          a.club_id
          ,b.club_name
          ,count(*)  as  club_people
        from
          user_detail  a
        left join
          club  b
        on
          a.club_id = b.club_id
        where
          join_club_status = '99'
        group by
          a.club_id
          ,b.club_name
        ) a
        ,(SELECT @row_number:=0) t
        order by club_people desc , convert(club_name USING gbk) COLLATE gbk_chinese_ci
        )  t3
        on t1.club_id = t3.club_id
    </select>

    <select id="listClub" resultType="map" >
        select
            ifnull(a.club_id,0) as club_id,
            ifnull(a.club_name,'') as club_name,
            ifnull(a.club_applicant_name,'') as club_applicant_name,
            concat(cast(a.club_create_date as date ),'')  as club_create_date,
            concat(cast(a.create_time as time ),'')  as create_time,
            concat(cast(a.create_date as date ),'')  as create_date,
            ifnull(a.club_qq,'') as club_qq,
            ifnull(a.club_description,'') as club_description,
            ifnull(d.value,'') as club_status,
            a.user_id,
            a.club_id,
            a.id,
            a.language_id
        from
          club  a
        left join
          world_city b
        on
          a.id = b.id
        left join
          dictionary  c
        on
          a.language_id = c.code
        and
          c.p_code='language'
        and
          c.language='zh'
        left join
          dictionary d
        on
          a.club_status = d.code
        and
          d.p_code = 'club'
        and
          d.language='zh'
        where
          is_delete = '0'
        and
          a.club_status in ('99','2')
        order by
        convert(a.club_name USING gbk) COLLATE gbk_chinese_ci
    </select>


    <select id="queryEvent" resultType="Integer">
        SELECT
            a.event_id
        from
            event a
        where
            a.event_status = 0
        and
            a.club_id = #{club_id}
    </select>

    <select id="queryClub" resultType="Integer">
        SELECT
            a.user_id
        from
            user_detail a
        where
            a.join_club_status = 1
         and
            a.club_id = #{club_id}
    </select>

    <select id="queryClubInfo"  resultType="com.hongzhi.zswh.app_1_4.entity.UserDetailEntity">
            SELECT
            club_id,
            user_id,
            jump_club_number,
            join_club_status,
            user_level,
            create_time,
            change_status_time,
            club_refuse_id
            FROM
            user_detail
            where
            user_id in (
            <foreach collection ="multipleReceiver" item="item" index= "index" separator=",">
                #{item}
            </foreach>
            )
    </select>

    <insert id="insetIntoUserDetail" parameterType="com.hongzhi.zswh.app_1_4.entity.UserDetailEntity">
        INSERT INTO user_detail_bak(
        `club_id`,`user_id`,
        `jump_club_number`,
        `join_club_status`,
        `user_level`,
        `create_time`,
        `change_status_time`,
        `club_refuse_id`,
        `create_time_bak`
        ) VALUE
        <foreach collection ="detailList" item="item" index= "index" separator=",">
            (
            #{item.club_id},
            #{item.user_id},
            #{item.jump_club_number},
            #{item.join_club_status},
            #{item.user_level},
            #{item.create_time},
            #{item.change_status_time},
            #{item.club_refuse_id},
            NOW()
            )
        </foreach>

    </insert>


    <delete id="clubUnbuild">
        DELETE
        FROM
        user_detail
        WHERE
        user_id in (
        <foreach collection ="reciver" item="item" index= "index" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <select id="selectCompetitionByUserId" resultType="map">
        SELECT
        b.competition_id
        FROM
        user_competition a
        LEFT JOIN
        competition b
        on a.competition_id =b.competition_id
        WHERE a.user_id = #{user_id}
        and b.compertition_live_status !=5
        and a.user_competition_status IN ('1','99')
    </select>


    <select id="selectEvent" resultType="map">
        SELECT
        b.organizer_id
        ,b.club_id
        ,b.event_id

        from
        event_registration a

        LEFT JOIN
        event b

        on
        a.event_id = b.event_id

        where
        a.my_status = 1
        and
        b.event_status = 1
        and
        b.end_time >= NOW()
        and
        a.user_id = #{user_id}
    </select>
</mapper>