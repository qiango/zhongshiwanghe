<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hongzhi.zswh.app_v5.dao.V5OrderDao">

	<insert id="saveOrder" useGeneratedKeys="true" keyProperty="id">
		insert into mall_order (
			 code
			,user_id
			,create_time
			,status
			,price
		) values (
			 #{code}
			,#{user_id}
			,now() 
			,#{status}
			,#{price}
		)
	</insert>
   	<select id="checkOrderCode" resultType="com.hongzhi.zswh.app_v5.entity.V5OrderEntity">
  		select 
  			t.id
  		   ,t.code 
  		from
  			mall_order t
  		where
  			t.code = #{orderCode}
	</select>
	<insert id="saveOrderGoods">
	   insert into mall_order_goods (
			 order_id
			,goods_id
			,properties_id
			,total_counts
			,effect_counts
			,single_price 
	   ) values (
			 #{id}
			,#{goods_id}
			,#{properties_id}
			,#{total_counts}
			,#{total_counts}
			,#{goods_price}  
	   )
	</insert>
	<insert id="saveOrderCouponUse">
	   insert into mall_order_coupon_use (
			 order_id
			,coupon_id
	   ) values
	    <foreach collection="list" item="item" index="index" separator=",">
	    (
			#{order_id}
		   ,#{item}  
		  )	
		</foreach>
	</insert>
    <select id="myOrderList" resultType="map">
        select 
			 t1.id
			,coalesce(t1.code ,'') as  code 
			,coalesce(t1.status  ,'') as  status 
			,coalesce(t4.value,'')  as status_name 
			,coalesce(t1.price,0)   as final_pay_price
        from  
			mall_order t1 
        left join dictionary t4 
			 on t1.status=t4.code 
			and t4.p_code = 'order_status'
			and t4.language = #{language}
        where 
        	t1.user_id = #{user_id}
        	order by  t1.create_time desc 
	</select>
	<select id="myOrderGoodsList" resultType="map">
		select 
			 t1.order_id
			,t4.code
			,t1.goods_id
			,t2.name 
			,t3.picture_url 
			,t1.properties_id
			,t1.total_counts
            ,t1.effect_counts
            ,(t1.total_counts - t1.effect_counts) as unusable_counts 
			,coalesce(t1.effect_counts*t1.single_price)  as goods_price
			,coalesce(t1.single_price,0.0)  as single_price
			,coalesce(t1.total_counts*(t5.current_price)-t4.price,0.0)   as    discount_part
			,coalesce(t6.property_value,0)  as  begin_time
            ,coalesce(t7.property_value,0)  as  due_time 
            ,t5.current_price
		from 
			mall_order_goods t1
		left join  mall_goods t2 
		       on  t1.goods_id = t2.id 
		left join  mall_goods_picture t3 
		       on  t1.goods_id = t3.goods_id 
		      and  t3.status = '1' 
		      and  show_index = 1 
		left join  mall_order  t4 
		       on  t1.order_id = t4.id 
		left join  mall_goods_price t5
               on  t1.goods_id = t5.goods_id 
              and  t1.properties_id = t5.properties_id 
        left join mall_goods_properties t6 
               on t6.properties_id=0 
              and t1.goods_id = t6.goods_id 
              and t6.property_code = "begin_date"
        left join mall_goods_properties t7 
               on t7.properties_id=0 
              and t1.goods_id = t7.goods_id 
              and t7.property_code = "due_date"
		where t4.user_id = #{user_id}
		order by 
		        t1.order_id
	</select>
	
	<select id="selectOrderDetailByCode"  resultType="com.hongzhi.zswh.app_v5.entity.V5OrderDetailEntity">
  	<!-- 
        private String order_code;
        private String order_status;
        private String order_status_name;
        private String payment;
        private Timestamp create_time;
        private Timestamp pay_time;
        private Double total_price;
        private Double origin_price;
        private Double discount_part;
  	 -->
  		select 
  		     a.id as order_id
  			,a.code  as order_code 
  			,a.status  as order_status
  			,b.value  as order_status_name 
            ,d.value as payment 
  			,a.create_time as create_time 
            ,coalesce(c.start_time,e.start_time) as pay_time 
            ,a.price  as  total_price 
            ,coalesce(c.trace_code ,e.trace_code ,'' )  as trace_code 
  		 from 
  		 	mall_order  a 
  		 left join dictionary   b 
  		        on a.status  = b.code 
  		       and b.language = #{language}
  		       and b.p_code = 'order_status'
  		 left join mall_payment  c 
  		        on a.id=c.order_id 
  		       and c.status = '2' 
  		  left join mall_payment  e 
                on a.id=e.order_id 
               and e.status = '1' 
  		 left join  dictionary  d 
  		        on e.way = d.code 
  		       and d.p_code ='pay_way' 
  		       and d.language = #{language} 
  		 where a.code=#{code}
  		  order by  coalesce(c.start_time,e.start_time)  desc 
         limit 1 
  	</select>
  	
  		<select id="usableGoodsByOrderId" resultType="map">
<!-- 
    List<Map<String, Object>> usableGoodsByOrderId(@Param("order_id") Integer order_id,@Param("language") String language);
 -->
  	         select 
  	             (a.total_counts*c.current_price)  as  origin_price 
  	            ,coalesce(c.price,0.0)  as  origin_single_price 
  	            ,coalesce(d.discount_type,'')  as  discount_type
                ,coalesce(d.param,'0.0')  as  param
                ,coalesce(d.method,'')  as  method
                ,coalesce(b.name ,'')   as goods_name 
                ,coalesce(a.total_counts,0)  as  total_counts 
                ,coalesce(a.effect_counts ,0)  as goods_total_count 
                ,coalesce(a.goods_id     ,'')  as     goods_id 
                ,coalesce(a.properties_id,'')  as     properties_id
                ,coalesce(f.picture_url  ,'')  as     picture_url 
                ,coalesce(t6.property_value,0)  as  begin_time
                ,coalesce(t7.property_value,0)  as  due_time 
                ,coalesce(t8.value,'')  as  status_name
  	         from   mall_order_goods  a 
  	         left join mall_goods b 
  	                on  a.goods_id = b.id 
  	         left join mall_goods_price c 
  	                on a.properties_id = c.properties_id 
  	               and a.goods_id = c.goods_id 
  	         left join mall_discount d 
  	                on c.discount_id = d.id 
             left join mall_goods_picture f
                    on a.goods_id = f.goods_id  
                   and f.show_index = 1 
             left join mall_goods_properties t6 
                    on  t6.properties_id=0 
                   and a.goods_id = t6.goods_id 
                   and t6.property_code = "begin_date"
             left join mall_goods_properties t7 
                    on t7.properties_id=0 
                   and a.goods_id = t7.goods_id 
                   and t7.property_code = "due_date"
             left  join  dictionary  t8  
                     on t8.p_code = 'data_alias' 
                    and t8.language = #{language}
              where a.order_id = #{order_id }
  	</select>

   <select id="unusableGoodsByOrderId" resultType="map">
  	         select 
  	               b.value as  status_name  
  	              ,a.goods_count   as  goods_total_count 
  	              ,c.name  as goods_name 
  	         from  mall_return_history   a 
  	         left join dictionary b 
  	                on a.status = b.code 
  	               and b.p_code = 'return_status' 
  	               and b.language = 'zh' 
  	         left join mall_goods c
  	                on a.goods_id = c.id 
  	         where  a.end_time  is null 
               and  a.order_id = #{order_id }
  	</select>
  	<!--  List<Map<String ,Object>> findCouponByOrderId(Integer order_code); -->
  	
  	<select id="findCouponByOrderId" resultType="map">
  		select
  			 b.coupon_name as discountName, 
  			c.property_value 
  		from(select a.coupon_id 
  				from mall_order_coupon_use a 
				left join mall_order b 
				on a.order_id =b.id
				where  b.code =#{order_code}
			)a
		left join 
			mall_coupon b
		on 
			a.coupon_id =b.coupon_id
		left join 
			mall_coupon_properties c
		on  
			c.coupon_id=b.coupon_id
		and 
			c.property_code='method'
  		
  	</select>
  	<!--  Map<String,Object> findPirceByCode(@Param("order_code")String order_code); -->
  	<select id="findPirceByCode" resultType="map">
  		select 
  			 b.total_counts 
  			,c.current_price from mall_order a
		left join mall_order_goods b
			on a.id =b.order_id
		left join mall_goods_price c
		on 
			c.goods_id = b.goods_id
		and 
			c.discount_id =1
		where a.code=#{order_code}
  	</select>

 
</mapper>